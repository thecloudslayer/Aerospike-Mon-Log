version: '3.8'
services:
  aerospike:
    container_name: aerospike
    image: aerospike/aerospike-server-enterprise:latest
    ports:
      - "3000:3000"
    command: ["--config-file", "/etc/aerospike/aerospike.conf"]
    volumes:
      - ./config/aerospike/aerospike.conf:/etc/aerospike/aerospike.conf
    logging:
      driver: json-file # Docker default logging driver for Promtail


  aerospike_tools:
    container_name: aerospiketools
    image: aerospike/aerospike-tools:latest
    depends_on:
      - aerospike
    command: [asadm, -haerospike]
    stdin_open: true

  exporter1:
    image: aerospike/aerospike-prometheus-exporter:latest
    container_name: exporter1
    environment:
      - AS_HOST=aerospike
      - AS_PORT=3000
      - "METRIC_LABELS=type='development',source='aerospike',longitude='0',latitude='0'"
    ports:
      - "9145:9145"
    depends_on:
      - aerospike

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/var/lib/prometheus/
      - ./easy-prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/aerospike_rules.yml:/etc/prometheus/aerospike_rules.yml
      - ./config/prometheus/aerospike_connector_rules.yml:/etc/prometheus/aerospike_connector_rules.yml
      - ./config/prometheus/node_exporter_alerts.yml:/etc/prometheus/node_exporter_alerts.yml
      - ./config/prometheus/aerospike_secret_agent_rules.yml:/etc/prometheus/aerospike_secret_agent_rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    depends_on:
      - exporter1

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - alertmanager_data:/alertmanager
      - ./config/prometheus/alertmanager.yml:/etc/prometheus/alertmanager.yml
    command:
      - '--config.file=/etc/prometheus/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"

  grafana:
    image: grafana/grafana:latest

    container_name: grafana
    volumes:
      - source: grafana_data
        target: /var/lib/grafana
        type: volume
      - source: ./config/grafana/dashboards/
        target: /var/lib/grafana/dashboards/
        type: bind
      - source: ./config/grafana/provisioning/
        target: /etc/grafana/provisioning/
        type: bind
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=camptocamp-prometheus-alertmanager-datasource, grafana-polystat-panel, jdbranham-diagram-panel
    depends_on:
      - prometheus
    ports:
      - "4000:3000"

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./config/loki/local-config.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

volumes:
  prometheus_data: {}
  alertmanager_data: {}
  grafana_data: {}
  loki_data: {}
